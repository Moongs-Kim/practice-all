[git 커밋 수정]

<마지막 커밋 수정>
git commit --amend : 마지막 커밋(최근 커밋) 메세지 수정
git commit --amend -m '메세지' : 수정할 커밋 메세지를 바로 입력 가능

--마지막 커밋에 변경 사항 추가--
최근 커밋이 있는 상태에서 add 후 스테이지된 상태로 만들기
스테이지된 상태에서 git commit --amend
  -> 이렇게 하면 스테이지에 있는 것도 같이 마지막 커밋에 추가됨

<과거의 커밋을 수정, 삭제, 병합, 분할>
git rebase -i (대상의 이전 커밋 해시값) : 커밋을 변경 또는 삭제 등 할 수 있는 창이 나온다.
                                      변경할 커밋의 이전(바로 전일 필요는 없음) 해시값 필요

    p,pick    : 커밋 그대로 두기
    r,reword  : 커밋 메세지 변경
    e,edit    : 수정을 위해 정지
    d,drop    : 커밋 삭제
    s,squash  : 이전 커밋에 합치기

s,squash 선택시 어느 커밋에 작성하는지 확인해야함
e,edit 선택시 git reset HEAD^를 사용해 스테이시 되지 않은 상태로 만든 후 나누고 싶은 만큼 add 작업하면됨

* rebase 키워드를 사용하는 이유
  깃에서 과거에 어떤 내역을 수정하면 수정한 커밋부터 이후까지 새로운 브랜치를 만든 다음
  기존 작업에 리베이스(재배치)로 갖다 붙이는 방식으로 과거를 바꾼다.

<취소와 되돌리기 더 깊이>
--관리되지 않는 파일 삭제--
git clean (옵션)

    -n : 삭제될 파일 보여주기
    -i : 인터렉티브(물어보기) 모드 시작하기
    -d : 폴더 포함하기
    -f : 강제로 지워 버리기(주의)
    -x : .gitignore 에 등록된 파일 삭제하기(주의)

    팁 : -nd, -id, -fd 등 옵션을 붙여 사용 가능

-- restore --
git restore : 작업 디렉터리에서 변경사항을 원래대로 되돌림
git restore --staged : 스테이지된것을 작업 디렉터리로 되돌림

git restore --source=(커밋 해시값) (파일명) : 특정 파일을 과거 어느 시점에 커밋 상태로 되돌리기

--리셋 취소하기--
git reflog : 내가 수행한 깃 작업의 모든 내역이 나나탐
리셋한 커밋에서 이전 작업의 해시값을 복사해서 다시 'git reset --hard (이전 해시값)' 하면 리셋으로 삭제한 커밋도 다시 복원 가능

