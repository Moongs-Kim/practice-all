[git cherry-pick and rebase --onto and squash]

<cherry-pick>
다른 브랜치에서 원하는 특정 커밋을 선택하여 원하는 브랜치로 가져오는 기능

git cherry-pick 커밋 해시값

-- cherry-pick의 특징 --
cherry-pick을 통해 원하는 브랜치로 가져온 커밋은 '기존 커밋과는 별개의 커밋'이다.

체리픽은 머지나 리베이스와 달리 특정 커밋을 복제해서 가져오는 것이기 때문이다.
따라서 체리픽을 통해 특정 커밋을 가져와도 해당 커밋이 해당 브랜치에서 사라지지 않는다.
즉 복제된 커밋으로 인해 똑같은 커밋이 2개 있는 것이다.

<rebase --onto>
상황 : A 브랜치 - B 브랜치 - C 브랜치 존재
       B 브랜치는 A에서 파생 / C 브랜치는 B 브랜치에서 파생

여기서 B 브랜치말고 C 브랜치의 커밋만 가져오고 싶을때 rebase --onto 사용

* 사용 필요시 검색해서 알아보자
git rebase --onto (도착 브랜치) (출발 브랜치) (이동할 브랜치)

만약 C 브랜치에서 그냥 rebase만해서 재배치를 한다면
C 브랜치는 B 브랜치에서 파생되었으므로 B,C 공통 커밋까지 A 브랜치로 재배치 될것이다.

여기서 rebase --onto를 사용하면 B, C의 공통 커밋은 제외하고 순수 C 브랜치에만 있는 커밋만
A 브랜치로 재배치 할 수 있다.

<squash>
상황 : A 브랜치 - B 브랜치 존재
       B 브랜치에 3개의 커밋이 존재

여기서 B 브랜치 3개의 커밋을 하나로 합쳐 1개의 커밋으로 A 브랜치에 병합할 때 사용

git merge --squash (가져올 브랜치 명)

* 스쿼시와 머지의 차이
머지는 두 브랜치를 한 곳으로 이어 붙이는 것
스쿼시는 B 브랜치의 커밋을 복사한 후 하나의 커밋으로 모아서 A 브랜치에 스테이지된 상태로 붙이는 것
따라서 스쿼시를 한 뒤에 별도로 커밋을 해야 변경 사항이 온전히 반영된다.
