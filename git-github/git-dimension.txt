[git 차원여행 명령어]

git branch : 브랜치 목록 확인
git branch 브랜치 명 : 새 브랜치 생성
git switch 브랜치 명 : 해당 브랜치로 이동
git switch -c 새 브랜치 명 : 새 브랜치 생성 후 해당 브랜치로 이동
    -> 깃 2.23 버전 이전 : git checkout -b 새 브랜치 명
git branch -m (기존 브랜치 명) (새 브랜치 명) : 브랜치 이름 변경
git branch -d 브랜치 명 : 브랜치 삭제
git branch -D 브랜치 명 : 해당 브랜치 강제 삭제

<브랜치 합치는 명령어>
merge는 병합이라는 뜻으로 두 브랜치를 이어 붙이는 것
그 과정에서 커밋 하나가 더 생김
병합한 뒤에도 분기했던 흔적이 남음

rebase는 브랜치를 다른 브랜체에 옮겨 붙이는 것
작업 내역이 깔끔하게 한 줄로 나타남
* 팀원들 간에 공유된 커밋에 대해서는 rebase를 사용하지 않는 게 좋다

git merge 브랜치 명 : 브랜치 병합
merge 순서
통합할 브랜치로 이동 -> 통합될 브랜치 명 -> 커밋 -> 통합 후 필요없는 브랜치 삭제

git rebase 브랜치 명 : 브랜치 재배치
통합될 브랜치로 이동 -> 통합할 브랜치 명 -> 통합한 브랜치로 이동 -> fast forward -> 통합 후 필요없는 브랜치 삭제

<브랜치 간 충돌 해결>
- git merge 충돌 시
충돌 해결 후 add, commit

- git rebase 충돌 시
합칠 브랜치 안에 있는 모든 커밋마다 충돌을 하나씩 차례로 해결해 주어야 한다.
충돌 해결 -> git add -> git rebase --continue -> 다음 충돌 -> git add -> git rebase --continue
위 과정 끝날때 까지 반복, 끝나면 fast forward 진행

<병합, 재배치 중단>
git merge --abort : 머지 중단
git rebase --abort : 리베이스 중단



<번외>
git log --all --decorate --oneline --graph : 터미널 창에서 브랜치 작업 내역을 시각적으로 보여줌
