
[static 변수]
인스턴스에 사용되는 멤버 변수는 인스턴스끼리 서로 공유되지 않는다.

static 변수는 메서드 영역에 생성되는 공용 변수이다.
static이 붙은 멤버 변수는 메서드 영역에서 관리한다. 즉 인스턴스 영역에 생성되지 않는다.
인스턴스와 무관하게 클래스에 바로 접근해서 사용가능, 클래스 자체에 소속
클래스 변수는 자바 프로그램을 시작할 때 딱 1개가 만들어진다.
보통 여러곳에서 공유하는 목적으로 사용된다.

클래스 변수는 해당 클래스가 JVM에 로딩 되는 순간 생성된다.
JVM이 종료될 때 까지 생명주기가 이어진다.

static 변수가 말 그대로 정적이라는 이유 : 힙 영역에 생성되는 인스턴스 변수는 동적으로 생성되고 제거된다.
반면 static인 정적변수는 거의 프로그램 실행 시점에 딱 만들어지고, 프로그램 종료 시점에 제거된다. 말 그대로 정적인 것이다.

[static 메서드]
인스턴스가 필요한 이유는 멤버 변수 등을 사용하는 목적이 크다.
하지만 변수가 없는 단순히 기능만 제공하는 클래스가 있다면 의미 없이 인스턴스를 생성해야한다.

정적 메서드는 정적 변수처럼 인스턴스 생성 없이 클래스 명을 통해서 바로 호출할 수 있다
정적 메서드 덕분에 불필요한 객체 생성 없이 편리하게 메서드 사용가능

static 메서드는 static만 사용할 수 있다.
클래스 내부의 기능을 사용할 때, 정적 메서드는 static이 붙은 정적 메서드나 정적 변수만 사용할 수 있다
클래스 내부의 기능을 사용할 때, 정적 메서드는 인스턴스 변수나, 인스턴스 메서드를 사용할 수 없다.

반대로 모든 곳에서 static을 호출할 수 있다.
정적 메서드는 공용 기능이다. 따라서 접근 제어자만 허락한다면 클래스를 통해 모든 곳에서 static을 호출 할 수 있다.

정적 메서드가 인스턴스의 기능을 사용할 수 없는 이유
정적 메서드는 클래스의 이름을 통해 바로 호출할 수 있다. 그래서 인스턴스처럼 참조값의 개념이 없다.
특정 인스턴스의 기능을 사용하려면 참조값을 알아야 하는데, 정적 메서드는 참조값 없이 호출한다.
따라서 정적 메서드 내부에서 인스턴스 변수나 인스턴스 메서드를 사용할 수 없다.
물론 객체의 참조값을 직접 매개변수로 전달하면 정적 메서드도 인스턴스 변수나 메서드를 호출할 수 있다.



